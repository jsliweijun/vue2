{"version":3,"file":"vue.js","sources":["../src/compiler/parser.js","../src/compiler/generate.js","../src/compiler/index.js","../src/observer/dep.js","../src/utils.js","../src/observer/scheduler.js","../src/observer/watcher.js","../src/vdom/patch.js","../src/lifecycle.js","../src/observer/array.js","../src/observer/index.js","../src/state.js","../src/init.js","../src/vdom/index.js","../src/render.js","../src/global-api/index.js","../src/index.js"],"sourcesContent":["/**\n * 对正则对熟悉程度\n */\n\nconst ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`; // 标签名\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`; //  用来获取的标签名的 match后的索引为1的\nconst startTagOpen = new RegExp(`^<${qnameCapture}`); // 匹配开始标签的\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`); // 匹配闭合标签的\n//           aa  =   \"  xxx \"  | '  xxxx '  | xxx\nconst attribute =\n    /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/; // a=b  a=\"b\"  a='b'\nconst startTagClose = /^\\s*(\\/?)>/; //     />   <div/>\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g; // {{aaaaa}}\n\n// html 字符传解析成 对应的脚本 来触发 tokens <div id=\"app\">{{name}}</div>\nexport function parserHTML(html) {\n    /**\n     *  将解析后的结果，组装层一个树结构 ，通过 栈 实现。\n     */\n    function createAstElement(tagName, attrs) {\n        return {\n            tag: tagName,\n            type: 1,\n            children: [],\n            parent: null,\n            attrs\n        };\n    }\n\n    // 每遇见一个开始标签就创建一个 element 元素 ，然后放入栈中，构建树，记录parent\n    function start(tagName, attribute) {\n        // console.log(tagName,attribute)\n        let parent = stack[stack.length - 1];\n        let element = createAstElement(tagName, attribute);\n        if (!root) {\n            root = element;\n        }\n        if (parent) {\n            element.parent = parent; // 当放入栈中时，记录父亲是谁\n            parent.children.push(element);\n        }\n        stack.push(element);\n    }\n    function end(tagName) {\n        // console.log(tagName)\n        let last = stack.pop();\n        if (last.tag !== tagName) {\n            throw new Error('标签有错误');\n        }\n    }\n\n    function chars(text) {\n        // console.log(text)\n        text = text.replace(/\\s/g, '');\n        let parent = stack[stack.length - 1];\n        if (text) {\n            parent.children.push({ type: 3, text });\n        }\n    }\n\n    let root = null; // 根元素(自定义组件时它时独立的)\n    let stack = [];\n    function advance(len) {\n        html = html.substring(len);\n    }\n\n    function parserStartTag() {\n        const start = html.match(startTagOpen);\n        //  console.log('parserStartTag start',start)\n        if (start) {\n            // match 不是 ast ，只是一个对象\n            const match = {\n                tagName: start[1],\n                attrs: []\n            };\n            advance(start[0].length);\n            // console.log(html) // id=\"app\">{{name}}</div>\n\n            // 进行匹配开始标签中的属性\n            let end;\n            let attr;\n            //  如果没有遇到开始标签的结尾就不停的解析\n            while (\n                !(end = html.match(startTagClose)) &&\n                (attr = html.match(attribute))\n            ) {\n                // console.log('attr',attr)\n                match.attrs.push({\n                    name: attr[1],\n                    value: attr[3] || attr[4] || attr[5]\n                });\n                advance(attr[0].length); // 一边解析，一边删除\n            }\n            // 去掉开始标签的 > 字符\n            if (end) {\n                advance(end[0].length);\n            }\n            // console.log('处理完开始标签后的  html ',html)\n            return match;\n        }\n        return false; // 不是开始标签\n    }\n\n    // 看要解析对内容是否存在，如果存在就不停的解析\n    while (html) {\n        let textEnd = html.indexOf('<');\n        if (textEnd === 0) {\n            const startTagMatch = parserStartTag(html); // 解析开始标签\n            if (startTagMatch) {\n                start(startTagMatch.tagName, startTagMatch.attrs);\n                continue;\n            }\n            const endTagMatch = html.match(endTag);\n            if (endTagMatch) {\n                end(endTagMatch[1]);\n                advance(endTagMatch[0].length);\n            }\n        }\n\n        // -----\n        let text; // 123123</div>  取到 123123 的文本内容\n        if (textEnd > 0) {\n            text = html.substring(0, textEnd);\n        }\n        if (text) {\n            chars(text);\n            advance(text.length);\n        }\n    }\n\n    return root;\n}\n","const defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g; // {{aaaaa}}\n\n// 要将 ast 的属性转换成字符串形式 [{name:'xx',value:'yy'}]  => xx=yy\nfunction genProps(attrs) {\n    let str = '';\n    for (let i = 0; i < attrs.length; i++) {\n        let attr = attrs[i];\n\n        // 要处理样式  color:red;background:blue\n        if (attr.name === 'style') {\n            let styleObj = {};\n            attr.value.replace(/([^;:]+)\\:([^;:]+)/g, function () {\n                styleObj[arguments[1]] = arguments[2];\n            });\n            attr.value = styleObj;\n        }\n\n        str += `${attr.name}:${JSON.stringify(attr.value)},`;\n    }\n    // a:1,b:2, 将最后一个 逗号去掉\n    return `{${str.slice(0, -1)}}`;\n}\n\nfunction gen(el) {\n    if (el.type == 1) {\n        return generate(el);\n    } else {\n        let text = el.text;\n        // 匹配 大括号 {{}}\n        if (!defaultTagRE.test(text)) {\n            return `_v('${text}')`;\n        } else {\n            console.log('11111111', text);\n            // hello {{name}}  world 变成=》 'hello' + name + 'world'  ; name  是变量.\n            let tokens = [];\n            let match;\n            let lastIndex = (defaultTagRE.lastIndex = 0); // 正则执行过一次之后会不在匹配了，需要重写进行。\n            while ((match = defaultTagRE.exec(text))) {\n                // 看有没有匹配到\n                console.log('2222', match);\n                let index = match.index; // 开始索引\n                if (index > lastIndex) {\n                    tokens.push(JSON.stringify(text.slice(lastIndex, index)));\n                }\n\n                // 这个变量有可能是对象\n                tokens.push(`_s(${match[1].trim()})`); // _s 就是 JSON.stringfly()\n\n                lastIndex = index + match[0].length;\n            }\n            if (lastIndex < text.length) {\n                tokens.push(JSON.stringify(text.slice(lastIndex)));\n            }\n\n            return `_v(${tokens.join('+')})`;\n        }\n    }\n}\n\nfunction genChildren(el) {\n    let children = el.children;\n    if (children) {\n        return children.map((c) => gen(c)).join(',');\n    }\n    return false;\n}\n\n// html 字符串 =》 字符串  _c('div',{id:'app',a:1},'hello')\n// _c() 创建元素虚拟节点  _v() 创建文本的虚拟节点\n// 目标： _c('div',{id:'app',a:1},'hello')\nexport function generate(el) {\n    console.log('generate  ', el);\n\n    let children = genChildren(el);\n\n    // 遍历树，将树拼接成字符串 。 生成 儿子 需要不断遍历  children => '','','' 多个\n    let code = `_c('${el.tag}' ,${\n        el.attrs.length ? genProps(el.attrs) : 'undefined'\n    } ${children ? ` , ${children}` : ''} )`;\n\n    return code;\n}\n","import { parserHTML } from './parser';\nimport { generate } from './generate';\n\n// ast （语法层面的描述，js css html）  vdom （dom节点）\n\n/**\n * 将模版内容转换成 render() 函数进行执行\n *    1. 解析 html，生成 AST 树\n *    2. 生成可执行的代码 code 。 类似变成了 React.createElement() 结构 js 代码\n *    3.\n */\nexport function compileToFunction(template) {\n    // console.log('compileToFunction',template)\n    let root = parserHTML(template);\n    console.log('AST 树', root); // 这个 ast 树是一个 js 对象，描述成标签树的标签类型，层级.\n    // 具体对象 {tag：div，attrs:{},children：[],type:1,parent:null}\n\n    // 生成代码\n    let code = generate(root);\n\n    // 返回的是 js 代码,可用于进行创建虚拟 dom ，虚拟DOM 实现原理\n    console.log('code: ', code); // code:  _c('div' ,{id:\"app\",test:\"1\",style:{\"color\":\" red\",\" background-color\":\" aqua\"}}  , _c('span' ,undefined  , _v(\"myage:\"+_s(age)+\"ssssss\"+_s(test)+\"'ssssss'\") ),_v(_s(name)) )\n\n    let render = new Function(`with(this){return ${code}}`);\n\n    return render;\n\n    // html => ast (只能描述语法，语法不存在的属性无法描述)  =>  render 函数 （new Function + with）\n    // =》 虚拟 DOM （增加额外的属性） =》 生成真实 dom\n}\n","let id = 0;\n\nclass Dep {\n    constructor() {\n        this.id = id++;\n        this.subs = [];\n    }\n    depend() {\n        // Dep.target  dep 里面要存放这个 watcher， watcher要存放dep  多对多的关系\n        if (Dep.target) {\n            Dep.target.addDep(this);\n        }\n    }\n    addSub(watcher) {\n        this.subs.push(watcher);\n    }\n    notify() {\n        console.log('notify');\n        this.subs.forEach((watcher) => {\n            watcher.update();\n        });\n    }\n}\n\nDep.target = null;\n\nlet stack = [];\n\nexport function pushTarget(watcher) {\n    Dep.target = watcher;\n    stack.push(watcher);\n}\n\nexport function popTarget() {\n    stack.pop();\n    Dep.target = stack[stack.length - 1];\n}\n\nexport default Dep;\n","export function isFunction(val) {\n    return typeof val === 'function';\n}\n\nexport function isObject(val) {\n    return typeof val === 'object' && val !== null;\n}\n\nconst callbacks = [];\n\nfunction flushCallbacks() {\n    callbacks.forEach((cb) => cb());\n    waiting = false;\n}\n\nlet waiting = false;\nexport function nextTick(cb) {\n    callbacks.push(cb); // flushSchedulerQueue  /userCallback  都在这，\n\n    if (!waiting) {\n        // vue3 不考虑兼容性直接这样。\n        Promise.resolve().then(flushCallbacks);\n        waiting = true;\n    }\n}\n\nlet lifeCycleHooks = [\n    'beforeCreate',\n    'created',\n    'beforeMount',\n    'mounted',\n    'beforeUpdate',\n    'beforeDestroy',\n    'destroyed'\n];\n\n//let strategy;\n// 存放各种策略\nlet strats = {};\n\nlifeCycleHooks.forEach((hook) => {\n    strats[hook] = mergeHook;\n});\n\n// 钩子函数合并的原理\nfunction mergeHook(parentVal, childVal) {\n    if (childVal) {\n        if (parentVal) {\n            return parentVal.concat(childVal);\n        } else {\n            return [childVal];\n        }\n    } else {\n        return parentVal;\n    }\n}\n\nstrats.components = function (parentVal, childVal) {\n    // Vue.options.components\n    let options = Object.create(parentVal);\n    // 将子类的属性拷贝到 options上\n    if (childVal) {\n        for (let key in childVal) {\n            options[key] = childVal[key];\n        }\n    }\n    return options;\n};\n\nexport function mergeOptions(parent, child) {\n    const options = {}; // 合并后的结果\n\n    for (let key in parent) {\n        mergeField(key);\n    }\n\n    //处理 child 中新的属性\n    for (let key in child) {\n        if (parent.hasOwnProperty(key)) {\n            continue;\n        }\n        mergeField(key);\n    }\n\n    function mergeField(key) {\n        let parentVal = parent[key];\n        let chidlVal = child[key];\n\n        // 采用策略模式，针对不同的属性进行合并\n        if (strats[key]) {\n            // 如果有对应的策略就调用对应的策略即可\n            options[key] = strats[key](parentVal, chidlVal);\n        } else {\n            if (isObject(parentVal) && isObject(chidlVal)) {\n                options[key] = { ...parentVal, ...chidlVal };\n            } else {\n                options[key] = child[key] || parent[key];\n            }\n        }\n    }\n\n    return options;\n}\n\nexport function isReservedTag(str) {\n    let reservedTag = 'a,div,span,p,img,button,ul,li';\n    // 源码根据 ，分割，生成对象 映射表 ，{a:true , div : true , p:true}\n\n    return reservedTag.includes(str);\n}\n","import { nextTick } from '../utils';\n\nlet queue = [];\nlet has = {}; //  做列表的， 列表为何存放了哪些 watcher\n\nfunction flushSchedulerQueue() {\n    for (let i = 0; i < queue.length; i++) {\n        queue[i].run();\n    }\n    queue = [];\n    has = {};\n    pending = false;\n}\n\nlet pending = false;\n\n// 这里开启异步操作，要等待同步代码执行完才进行执行异步逻辑 update ，虚拟变真实dom\nexport function queueWatcher(watcher) {\n    const id = watcher.id;\n    if (has[id] == null) {\n        queue.push(watcher);\n        has[id] = true;\n\n        // 开启一次更新操作， 批处理（防抖）\n        if (!pending) {\n            // 当前执行栈中代码执行完毕后，会先清空微任务，再清空宏任务，希望尽早更新页面，就不要用setTimeout ，它是宏任务 。 vue 中自己 封装了一个 nextTick\n            // 异步操作\n            // setTimeout(flushSchedulerQueue, 0);\n            nextTick(flushSchedulerQueue, 0);\n\n            pending = true;\n        }\n    }\n}\n","import { popTarget, pushTarget } from './dep';\nimport { queueWatcher } from './scheduler';\n\nlet id = 0;\n\n// 一个watcher 可以理解为一个组件，这个组件上使用了多个属性 {{name}} {{age}}\n// 所以需要记住多个 dep ，每个dep 就是一个属性\nclass Watcher {\n    //  vm,  updateComponent,  () => {  console.log('更新视图了');   },   true\n    constructor(vm, exprOrFn, cb, options) {\n        this.vm = vm;\n        this.exprOrFn = exprOrFn;\n        this.user = !!options.user; // 标识是不是用户 watcher\n        this.lazy = !!options.lazy;\n        this.dirty = options.lazy; // 如果是计算属性，那么默认值 lazy,dirty 都是 true\n        this.cb = cb;\n        this.options = options;\n        this.id = id++; // 每个实例都身份证号\n\n        this.deps = [];\n        this.depsId = new Set();\n\n        // 默认应该让 exprOrFn 执行， exprOrFn 方法做了什么？ 执行render （去vm 上进行取值了），所以可以理解为 getter\n\n        if (typeof exprOrFn == 'string') {\n            this.getter = function () {\n                //需要将表达式转化为函数\n\n                //进行数据取值，进行依赖收集\n                // age.n  vm['age.n'] => vm[age][n]\n                let path = exprOrFn.split('.');\n                let obj = vm;\n                for (let i = 0; i < path.length; i++) {\n                    obj = obj[path[i]];\n                }\n                return obj;\n            };\n        } else {\n            this.getter = exprOrFn; // render(){_c(div,{},_v(name))}\n        }\n\n        // 计算属性，第一次不取值\n        // 第一次的vlaue\n        this.value = this.lazy ? undefined : this.get(); // 默认初始化， 要取值\n    }\n\n    get() {\n        // 稍后用户更新时，可以重新调研 getter 方法\n\n        // 执行下面方法，会执行属性的 defineProperty.get 方法， 每个属性都可以收集自己的 watcher\n        // 希望一个属性可以对应多个 watcher ，同时一个 watcher 可以对应多个属性。 使用 dep 管理它们多对多的关系。\n        pushTarget(this); // Dep.target = watcher\n        const value = this.getter.call(this.vm); // render（） 方法对取 vm 上取值， vm._update(vm._render())\n        popTarget(); // Dep.target = null , 如果 Dep.target 有值就说明这个变量在模版中使用了。\n        return value;\n    }\n\n    // vue 中的更新操作是异步的\n    update() {\n        //  console.log(\n        //     '属性更新，也没渲染，更新视图， 这种方式多次修改，更新视图多次，性能不好。实现异步更新'\n        // );\n        // this.get();\n\n        // 每次更新时，就是 this 执行， 就是 watcher 执行，可以将 watcher 缓存起来，最后一次一起执行更新，\n        // 采用异步更新\n        // queueWatcher(this);\n\n        if (this.lazy) {\n            this.dirty = true;\n        } else {\n            queueWatcher(this);\n        }\n    }\n\n    // 用户更新会执行这个方法\n    run() {\n        let newValue = this.get();\n        let oldVlaue = this.value;\n        this.value = newValue;\n        if (this.user) {\n            this.cb.call(this.vm, newValue, oldVlaue);\n        }\n    }\n\n    // 记住这个组件模版中使用了哪些属性数据 {{name}} {{name}}  {{age}}\n    // 一个模版中使用了 多次 name ，只需要记住一次就够了\n    addDep(dep) {\n        let id = dep.id;\n        if (!this.depsId.has(id)) {\n            this.depsId.add(id);\n            this.deps.push(dep);\n            dep.addSub(this);\n        }\n    }\n\n    // 计算属性 重新 get，计算出最新的值\n    evaluate() {\n        this.dirty = false; // 不需要重新get求值了\n        this.value = this.get();\n    }\n\n    // 计算属性 记住了 它的依赖属性。 也需要 被依赖是 firstName lastName 也记住计算属性\n    depend() {\n        let i = this.deps.length;\n        while (i--) {\n            this.deps[i].depend(); //firstName lastName 收集渲染watcher\n        }\n    }\n}\n\nexport default Watcher;\n","export function patch(oldVnode, vnode) {\n    if (!oldVnode) {\n        return createElm(vnode); // 如果没有 el 元素，那就直接根据虚拟节点返回真实节点。 子组件场景\n    }\n\n    if (oldVnode.nodeType == 1) {\n        // 用vnode  来生成真实dom 替换原来的 dom 元素\n        const parentElm = oldVnode.parentNode;\n        let elm = createElm(vnode);\n        parentElm.insertBefore(elm, oldVnode.nextSibling);\n\n        parentElm.removeChild(oldVnode);\n        return elm;\n    }\n}\n\n// 创建组件\n\nfunction createComponent(vnode) {\n    let i = vnode.data;\n    if ((i = i.hook) && (i = i.init)) {\n        i(vnode); // 调用 init 方法\n    }\n\n    if (vnode.componentInstance) {\n        // 有属性说明子组件new 完毕了， 并且组件对应的真实dom\n        return true;\n    }\n}\n\n// 创建真实的元素 dom\nfunction createElm(vnode) {\n    let { tag, data, children, text, vm } = vnode;\n    if (typeof tag === 'string') {\n        if (createComponent(vnode)) {\n            // 返回组件的真实节点\n            return vnode.componentInstance.$el;\n        }\n\n        vnode.el = document.createElement(tag);\n        children.forEach((child) => {\n            vnode.el.appendChild(createElm(child));\n        });\n    } else {\n        vnode.el = document.createTextNode(text);\n    }\n    return vnode.el;\n}\n","import Watcher from './observer/watcher';\nimport { nextTick } from './utils';\nimport { patch } from './vdom/patch';\n\nexport function lifecycleMixin(Vue) {\n    // 传入的是 虚拟dom 节点, 虚拟dom 变成真实dom\n    Vue.prototype._update = function (vnode) {\n        console.log('update', vnode);\n        const vm = this;\n        vm.$el = patch(vm.$el, vnode);\n    };\n\n    // 扩展出一个异步更新方法，项目中使用，用户中也可以使用\n    Vue.prototype.$nextTick = nextTick;\n}\n\n// 后续每个组件渲染的时候都会有一个 watcher\nexport function mountComponent(vm, el) {\n    // vue的实现很简单：做了个更新方法（初次执行，内容更新后执行）\n    // 更新函数，数据变化后，会再次调用此函数\n    let updateComponent = () => {\n        // 调用 render函数，生成虚拟 DOM\n        vm._update(vm._render()); // 后续更新可以调用 updateComponent方法。 这两个实例方法在哪写？\n        // 用虚拟 dom 生成真实 dom\n    };\n\n    // 使用观察者模式，实现数据变化页面更新： 属性是“被观察者”  ， 刷新页面：“观察者”\n    // updateComponent();\n\n    callHook(vm, 'beforeMount');\n\n    // 他是一个渲染watcher ，后续还有其他watcher\n    // 渲染一个组件\n    new Watcher(\n        vm,\n        updateComponent,\n        () => {\n            console.log('更新视图了');\n        },\n        true\n    );\n}\n\nexport function callHook(vm, hook) {\n    let handlers = vm.$options[hook];\n    if (handlers) {\n        for (let i = 0; i < handlers.length; i++) {\n            handlers[i].call(vm);\n        }\n    }\n}\n","let oldArrayPrototype = Array.prototype;\n\nexport let arrayMethods = Object.create(oldArrayPrototype);\n// 这个创建的对像，的原型链 __proto__ 指向 Array.prototype\n// arrayMerhods.__proto__ = Array.prototype 继承\n\nlet methods = ['push', 'pop', 'shift', 'unshift', 'reverse', 'sort', 'splice'];\n\nmethods.forEach((method) => {\n    // 用户调用上面 7 个方法，会使用这里重写的，否则使用原理数组 原生的方法。\n    arrayMethods[method] = function (...args) {\n        console.log('数组变化了');\n\n        // 调用数组原生的方法\n        oldArrayPrototype[method].call(this, ...args);\n\n        // arr.push({a:1})\n\n        // 新数据进行添加get set 方法\n\n        let inserted;\n        let ob = this.__ob__;\n        switch (method) {\n            case 'push':\n            case 'unshift':\n                inserted = args; // 新增的数据\n                break;\n            case 'splice':\n                inserted = args.slice(2);\n            default:\n                break;\n        }\n\n        // 如果有新增的内容需要进行集训劫持，需要观测数组里面的每一项。\n        if (inserted) {\n            ob.observeArray(inserted);\n        }\n\n        // 更新操作，触发视图更新, 数组的 observer.dep 属性\n        ob.dep.notify();\n    };\n});\n","import { isObject } from '../utils';\nimport { arrayMethods } from './array';\nimport Dep from './dep';\n\n// 总结  vue源码中 响应式原理， 编译原理（模版）  diff算法。\n// 1. 如果数据是对象， 会将对象不停的递归 进行 劫持，（添加 get set 方法）\n// 2. 如果数据是数组，会劫持数组的方法，修改数组中的原型链 __proto__ 指向我们的对象， 并对数组中不是基本数据类型的进行监测。\n\n// 监测数据变化 ，类有类型，知道是它的实例\n\n// 如果给对象新增一个属性不会触发视图更新，需要使用 $set 将属性变成响应式的才可以\n// 给对象本身增加一个 dep ，dep中存watcher ，如果增加一个属性后，我就手动的触发 watcher 的更新\nclass Observer {\n    // 对对象中的所有属性进行劫持，绑定 get /set 方法， 循环对象属性\n    constructor(data) {\n        // 每个数据对象（可能是对象，数组），都有一个 dep，记录哪个watcher 使用了这个数据\n        this.dep = new Dep();\n\n        Object.defineProperty(data, '__ob__', {\n            value: this,\n            enumerable: false\n        });\n        // data.__ob__ = this; // 被劫持过的属性都有 __ob__ ,下面遍历时要不能遍历的这个属性\n\n        // 数组变化可以触发视图更新？\n        if (Array.isArray(data)) {\n            // 数组劫持的逻辑\n            // 对数组原来对方法进行改写，切面编程，高阶函数\n            // 只修改这个数组中的方法， 外部的数组不受影响\n            data.__proto__ = arrayMethods;\n\n            // 如果数组中的数据上对象类型，需要监控对象的变化\n            this.observeArray(data);\n        } else {\n            this.walk(data);\n        }\n    }\n\n    // 进行对数组中的数组，对象进行劫持，采用递归\n    observeArray(data) {\n        data.forEach((item) => {\n            observe(item);\n        });\n    }\n\n    // 循环对象属性，将这个对象的属性 设置成响应式的\n    walk(data) {\n        // 这个方式不会 获取data 原型中的属性。\n        Object.keys(data).forEach((key) => {\n            defineReactive(data, key, data[key]);\n        });\n    }\n}\n\nfunction dependArray(value) {\n    for (let i = 0; i < value.length; i++) {\n        let current = value[i]; // current 是数组里面的数组 [[[[[多层]]]]]\n        current.__ob__ && current.__ob__.dep.depend(); // 进行依赖收集\n        if (Array.isArray(current)) {\n            dependArray(current);\n        }\n    }\n}\n\n// vue2 会对对象进行遍历，将每个属性 用 define Property 重新定义，性能差，不断递归\n// {arr:[1,2,3,[a,b,c]]}\nfunction defineReactive(data, key, value) {\n    let childOb = observe(value); // 进行递归下面的属性,对象套对象\n\n    // arr  [1,2,3]\n    // childOb 是数组对应的 ob\n\n    // 每个属性都有一个dep 属性，它记录有哪些组件使用到了这个属性\n    let dep = new Dep();\n    Object.defineProperty(data, key, {\n        get() {\n            console.log(dep, key);\n            // 取值时，将 watcher 和 dep 对应起来\n            // 这个get调用，是模版中调用 {{name}} 进行取值\n            if (Dep.target) {\n                dep.depend(); // 让 dep记住 watcher\n\n                if (childOb) {\n                    // chidlOb 可能是数组，也可能是对象，对象也要收集依赖，后续 $set 方法也需要触发视图更新\n                    childOb.dep.depend(); // 数组数据对象，收集依赖 watcher ，倒是这个数组数据变化了，它就通知使用了这个数组的组件进行视图更新\n\n                    // 对数组里的每一项也进行依赖收集 [[1],[2]]\n                    if (Array.isArray(value)) {\n                        // 给数组里面的每一项也进行依赖收集，当里面每一项修改后，它们会通知视图更新\n                        dependArray(value);\n                    }\n                }\n            }\n            return value;\n        },\n        set(newV) {\n            // todo  更新视图\n\n            if (newV !== value) {\n                // 把用户设置的值也进行劫持，赋值一个新对象\n                observe(newV);\n                value = newV;\n                dep.notify(); // 告诉当前的属性存放的watcher 执行\n            }\n        }\n    });\n}\n\n// 观测数据\nexport function observe(data) {\n    // 如果是对象才观测\n\n    if (!isObject(data)) {\n        return;\n    }\n    if (data.__ob__) {\n        return data.__ob__; // 数据本身 this Observer实例\n    }\n\n    // 默认最外层的data 必须是一个对象\n    // 给这些数据，创建一个观察者\n    return new Observer(data);\n}\n","import Dep from './observer/dep';\nimport { observe } from './observer/index'; // node_resolve_plugin 这个插件就能自动找目录下的index 文件\nimport Watcher from './observer/watcher';\nimport { isFunction } from './utils';\n\n// 状态的初始化\nexport function initState(vm) {\n    const opts = vm.$options;\n\n    if (opts.data) {\n        initData(vm);\n    }\n\n    // computed 与 watch 的区别\n    if (opts.computed) {\n        initComputed(vm, opts.computed);\n    }\n    if (opts.watch) {\n        initWatch(vm, opts.watch);\n    }\n}\n\nexport function stateMixin(Vue) {\n    // 渲染 watcher 通过 页面使用数据调用get\n    // 用户 watcher 是通过调用 get方式实现 依赖收集的\n    Vue.prototype.$watch = function (key, handler, options = {}) {\n        // watch 可以传入选项参数 deep immediate\n        options.user = true; // 是用户写的 watcher\n\n        // vm name ,用户回调， options.user\n        let watcher = new Watcher(this, key, handler, options);\n\n        // 实现立即执行\n        if (options.immediate) {\n            handler(watcher.value);\n        }\n    };\n}\n\nfunction proxy(vm, source, key) {\n    Object.defineProperty(vm, key, {\n        get() {\n            return vm[source][key];\n        },\n        set(newValue) {\n            vm[source][key] = newValue;\n        }\n    });\n}\n\n// 用户传入的数据，要将它们变成响应式的。怎么做呢？\nfunction initData(vm) {\n    let data = vm.$options.data;\n\n    // vue2中会将 data 中的所有数据，进行数据劫持 Object.defineProperty()\n    // data 可能是对象，函数，需要判断。 当是函数时，函数里面的this 都是vue 实例\n    // vm 和 data 没有任何关系，通过 _data 进行关联\n    data = vm._data = isFunction(data) ? data.call(vm) : data;\n    // console.log(data, '----');\n\n    // 将 data 中数据代理到 vm上， 可以直接到 vm 获取数据\n    // 用户 vm.name 等价于 vm._data.name\n    for (let key in data) {\n        proxy(vm, '_data', key);\n    }\n\n    //  这里就获取到数据了，就要进行数据的响应式功能\n    observe(data);\n}\n\nfunction initWatch(vm, watch) {\n    for (let key in watch) {\n        let handler = watch[key];\n\n        if (Array.isArray(handler)) {\n            for (let i = 0; i < handler.length; i++) {\n                createWatcher(vm, key, handler[i]);\n            }\n        } else {\n            createWatcher(vm, key, handler);\n        }\n    }\n}\n\nfunction createWatcher(vm, key, handler) {\n    return vm.$watch(key, handler);\n}\n\n// 多个计算属性，多个 watcher\nfunction initComputed(vm, computed) {\n    const watchers = (vm._computedWatchers = {});\n    for (let key in computed) {\n        const userDef = computed[key];\n\n        // 依赖的属性变化就重新取值 get\n        let getter = typeof userDef == 'function' ? userDef : userDef.get;\n\n        // 每个计算属性就是 watcher\n        // 将watcher 和 计算属性 做映射\n        watchers[key] = new Watcher(vm, getter, () => {}, { lazy: true }); // 默认不执行\n\n        // 将 key 定义在 vm 上， 才有了计算属性能使用\n        defineComputed(vm, key, userDef); // 就是一个 defineProperty\n    }\n}\n\nfunction createComputedGetter(key) {\n    // 取计算属性的值，走的是这个函数\n    return function computedGetter() {\n        // this._computedWatchers 包含所有的计算属性\n        // 通过key 可以拿到对应的 watcher ， 这个watcher 包含了 getter\n        let watcher = this._computedWatchers[key];\n\n        console.log(watcher.dirty);\n        // 根据 dirty 属性，判断是否需要重新求值，实现缓存功能\n        if (watcher.dirty) {\n            watcher.evaluate();\n        }\n\n        // 如果当前取完值后 Dep.target 还有值，需要继续向上收集\n        if (Dep.target) {\n            // 计算属性 watcher 内部有两个 dep  firstName ，lastName\n            watcher.depend(); // watcher 里 对应了 多个 dep\n        }\n\n        return watcher.value;\n    };\n}\n\nfunction defineComputed(vm, key, userDef) {\n    console.log('-----------');\n    let sharedProperty = {};\n    if (typeof userDef == 'function') {\n        sharedProperty.get = userDef;\n    } else {\n        sharedProperty.get = createComputedGetter(key);\n        sharedProperty.set = userDef.set;\n    }\n    Object.defineProperty(vm, key, sharedProperty);\n}\n","import { compileToFunction } from './compiler/index';\nimport { callHook, mountComponent } from './lifecycle';\nimport { initState } from './state';\nimport { mergeOptions } from './utils';\n\n//  在 vue 上进行一次混合操作，扩展添加方法\nexport function initMixin(Vue) {\n    Vue.prototype._init = function (options) {\n        // console.log(options);\n        // el , data\n        const vm = this;\n        // vm.$options = options; // 选项，用户使用时会调用 $options ,所以框架底层进行这样创建，后面会扩展他\n        vm.$options = mergeOptions(vm.constructor.options, options);\n\n        // 调用生命周期钩子\n        callHook(vm, 'beforeCreate');\n\n        // 对数据进行初始化，watch  computed props  data ，都是数据\n        //  数据劫持：就是当操作数据时，让我们知道了修改了，获取了这个数据，然后我们就可以进行做 更新试图 等功能。\n        // 加get set 方法，第一步是加了数据监控等功能，\n        initState(vm); // vm.$options.data 将数据处理放在另外一个方法中，状态初始化\n\n        callHook(vm, 'created');\n\n        // 将数据挂在 模版上\n        if (vm.$options.el) {\n            // 将数据挂载到这个模板上\n            vm.$mount(vm.$options.el);\n        }\n        // 有可能传入 template：“” ， render:h() //优先级高\n    };\n\n    Vue.prototype.$mount = function (el) {\n        const vm = this;\n        const options = vm.$options;\n        el = document.querySelector(el);\n        vm.$el = el;\n        // 把模版转化成 对应的渲染函数  =》 虚拟 DOM 概念， vnode  =》 diff 算法 更新虚拟dom =》 产生真实的节点，更新\n        if (!options.render) {\n            let template = options.template;\n            if (!template && el) {\n                template = el.outerHTML;\n            }\n            let render = compileToFunction(template);\n            options.render = render; // 就是渲染函数\n        }\n        // options.render  就是渲染函数\n        console.log(options.render); // 调用render 方法 ，渲染成真实 dom 替换掉页面的内容\n\n        // new Vue() 的过程叫做组件，这个组件能自动实现组件挂载，放在真实的页面中。\n        mountComponent(vm, el); // 组件的挂载流程，挂载到 el 元素上。在生命周期的方法中执行完成挂载\n    };\n}\n","import { isObject, isReservedTag } from '../utils';\n\nexport function createElement(vm, tag, data = {}, ...children) {\n    // tag 可能是一个 组件， 应该渲染一个组件的 vnode\n\n    if (isReservedTag(tag)) {\n        return vnode(vm, tag, data, data.key, children, undefined);\n    } else {\n        console.log(tag);\n        const Ctor = vm.$options.components[tag];\n        return createComponent(vm, tag, data, data.key, children, Ctor);\n    }\n}\n\n// 创建组件的虚拟节点, 传入的组件可能是对象，也可能是函数\n// 为了区分组件和原生元素 ， data.hook , componentOption\nfunction createComponent(vm, tag, data, key, children, Ctor) {\n    if (isObject(Ctor)) {\n        Ctor = vm.$options._base.extend(Ctor);\n    }\n    // console.log('Ctor', Ctor);\n\n    // 渲染组件时，需要调用此初始化方法。\n    data.hook = {\n        init(vnode) {\n            // 如何将子组件对象 变成真实dom\n            let vm = (vnode.componentInstance = new Ctor({\n                _isComponent: true\n            })); // 创建子组件, 会进行将该选项和组件的配置进行合并。\n            vm.$mount(); // 组件挂载完毕后， 会在 vnode.componentInstance.$el => <button>\n        }\n    };\n\n    return vnode(vm, `vue-component-${tag}`, data, key, undefined, undefined, {\n        Ctor,\n        children\n    });\n}\n\nexport function createTextElement(vm, text) {\n    return vnode(vm, undefined, undefined, undefined, undefined, text);\n}\n\nfunction vnode(vm, tag, data, key, children, text, componentOptions) {\n    return { vm, tag, data, key, children, text, componentOptions };\n}\n","import { createElement, createTextElement } from './vdom/index';\n\nexport function renderMixin(Vue) {\n    // 节点，产生虚拟节点\n    Vue.prototype._c = function () {\n        return createElement(this, ...arguments);\n    };\n\n    // 文本 , 创建文本元素\n    Vue.prototype._v = function (text) {\n        return createTextElement(this, text);\n    };\n\n    // 变量\n    Vue.prototype._s = function (val) {\n        if (typeof val === 'object') return JSON.stringify(val);\n        return val;\n    };\n\n    Vue.prototype._render = function () {\n        console.log('render'); // render 比 update 先执行\n\n        const vm = this;\n\n        // 这个方法中的 js 代码会有 _c, _s, _v 这些方法，需要定义这些方法\n        let render = vm.$options.render; // 就是解析出来的 render 方法，同时也有可能是用户写的\n\n        let vnode = render.call(vm);\n\n        return vnode;\n    };\n}\n","import { mergeOptions } from '../utils';\n\nexport function initGloabalApi(Vue) {\n    // 用来存放全局配置的， Vue.component  , Vue.filters  Vue.directives  都放在这个对象里面\n    // 每个组件初始化时候都会和这个 options 进行合并\n    Vue.options = {};\n    Vue.mixin = function (options) {\n        // 生命周期方法合并是放在一个数组里     {}    {beforeCreate:fn}  => {beforecreate:[fn]}\n        //                                 {beforecreate:[fn]}  {beforecreate:fn}  => {beforecreate:[fn,fn]}\n        this.options = mergeOptions(this.options, options);\n        // console.log(this.options);\n        return this;\n    };\n\n    //\n    Vue.options._base = Vue; // 无论后续创建的多少个子类，都可以通过这个 _base 找到 Vue\n    Vue.options.components = {};\n    Vue.component = function (id, definition) {\n        // 保证组件的隔离， 每个组件都会产生一个新的类，去继承父类。\n        definition = this.options._base.extend(definition);\n        this.options.components[id] = definition;\n\n        // 选项合并 组件内的 compoents 比 Vue.component() 定义的组件级别高。这里要用继承的方式。\n    };\n\n    // 给一个对象，返回一个类\n    // extend 方法就是产生一个继承于 Vue 的类，并且身上应该有父类的所有功能。\n    Vue.extend = function (opts) {\n        const Super = this;\n        // 每个组件一个子类，什么时候被创建成对象？\n        const Sub = function VueComponent(options) {\n            this._init(options);\n        };\n        Sub.prototype = Object.create(Super.prototype);\n        Sub.prototype.constructor = Sub;\n        Sub.options = mergeOptions(Super.options, opts);\n        return Sub;\n    };\n}\n","import { initMixin } from './init';\nimport { renderMixin } from './render';\nimport { lifecycleMixin } from './lifecycle';\nimport { stateMixin } from './state';\nimport { initGloabalApi } from './global-api/index';\n\n// Vue 是一个构造函数\nfunction Vue(options) {\n    this._init(options);\n}\n\n// 这样添加会写很多这样的代码，实现功能拆分到其他文件中，使用下面mixin 方式，扩展原型方法\n// Vue.prototype._init = function(){}\n\n// 给构造函数，添加实例公共方法\n// 扩展原型\ninitMixin(Vue);\nrenderMixin(Vue); // _render\nlifecycleMixin(Vue); // _update\nstateMixin(Vue);\n\n// 在类上扩展， 使用是 Vue.mixin\ninitGloabalApi(Vue);\n\nexport default Vue;\n"],"names":["ncname","qnameCapture","startTagOpen","RegExp","endTag","attribute","startTagClose","parserHTML","html","createAstElement","tagName","attrs","tag","type","children","parent","start","stack","length","element","root","push","end","last","pop","Error","chars","text","replace","advance","len","substring","parserStartTag","match","attr","name","value","textEnd","indexOf","startTagMatch","endTagMatch","defaultTagRE","genProps","str","i","styleObj","arguments","JSON","stringify","slice","gen","el","generate","test","console","log","tokens","lastIndex","exec","index","trim","join","genChildren","map","c","code","compileToFunction","template","render","Function","id","Dep","subs","target","addDep","watcher","forEach","update","pushTarget","popTarget","isFunction","val","isObject","callbacks","flushCallbacks","cb","waiting","nextTick","Promise","resolve","then","lifeCycleHooks","strats","hook","mergeHook","parentVal","childVal","concat","components","options","Object","create","key","mergeOptions","child","mergeField","hasOwnProperty","chidlVal","isReservedTag","reservedTag","includes","queue","has","flushSchedulerQueue","run","pending","queueWatcher","Watcher","vm","exprOrFn","user","lazy","dirty","deps","depsId","Set","getter","path","split","obj","undefined","get","call","newValue","oldVlaue","dep","add","addSub","depend","patch","oldVnode","vnode","createElm","nodeType","parentElm","parentNode","elm","insertBefore","nextSibling","removeChild","createComponent","data","init","componentInstance","$el","document","createElement","appendChild","createTextNode","lifecycleMixin","Vue","prototype","_update","$nextTick","mountComponent","updateComponent","_render","callHook","handlers","$options","oldArrayPrototype","Array","arrayMethods","methods","method","args","inserted","ob","__ob__","observeArray","notify","Observer","defineProperty","enumerable","isArray","__proto__","walk","item","observe","keys","defineReactive","dependArray","current","childOb","set","newV","initState","opts","initData","computed","initComputed","watch","initWatch","stateMixin","$watch","handler","immediate","proxy","source","_data","createWatcher","watchers","_computedWatchers","userDef","defineComputed","createComputedGetter","computedGetter","evaluate","sharedProperty","initMixin","_init","constructor","$mount","querySelector","outerHTML","Ctor","_base","extend","_isComponent","createTextElement","componentOptions","renderMixin","_c","_v","_s","initGloabalApi","mixin","component","definition","Super","Sub","VueComponent"],"mappings":"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"}