{"version":3,"file":"vue.js","sources":["../src/utils.js","../src/observer/index.js","../src/state.js","../src/init.js","../src/index.js"],"sourcesContent":["export function isFunction(val) {\n    return typeof val === 'function';\n}\n\nexport function isObject(val) {\n    return typeof val === 'object' && val !== null;\n}\n","import { isObject } from '../utils';\n\n// 监测数据变化 ，类有类型，知道是它的实例\nclass Observer {\n    // 对对象中的所有属性进行劫持，绑定 get /set 方法， 循环对象属性\n    constructor(data) {\n        this.walk(data);\n    }\n\n    // 循环对象属性，将这个对象的属性 设置成响应式的\n    walk(data) {\n        // 这个方式不会 获取data 原型中的属性。\n        Object.keys(data).forEach((key) => {\n            defineReactive(data, key, data[key]);\n        });\n    }\n}\n\n// vue2 会对对象进行遍历，将每个属性 用 define Property 重新定义，性能差，不断递归\nfunction defineReactive(data, key, value) {\n    observe(value); // 进行递归下面的属性,对象套对象\n    Object.defineProperty(data, key, {\n        get() {\n            return value;\n        },\n        set(newV) {\n            // 把用户设置的值也进行劫持，赋值一个新对象\n            observe(newV);\n            value = newV;\n        }\n    });\n}\n\n// 观测数据\nexport function observe(data) {\n    // 如果是对象才观测\n\n    if (!isObject(data)) {\n        return;\n    }\n\n    // 默认最外层的data 必须是一个对象\n    // 给这些数据，创建一个观察者\n    return new Observer(data);\n}\n","import { observe } from './observer/index'; // node_resolve_plugin 这个插件就能自动找目录下的index 文件\nimport { isFunction } from './utils';\n\n// 状态的初始化\nexport function initState(vm) {\n    const opts = vm.$options;\n\n    if (opts.data) {\n        initData(vm);\n    }\n\n    // computed 与 watch 的区别\n    // if (opts.computed) {\n    //     initComputed();\n    // }\n    // if (opts.watch) {\n    //     initWatch();\n    // }\n}\n\n// 用户传入的数据，要将它们变成响应式的。怎么做呢？\nfunction initData(vm) {\n    let data = vm.$options.data;\n\n    // vue2中会将 data 中的所有数据，进行数据劫持 Object.defineProperty()\n    // data 可能是对象，函数，需要判断。 当是函数时，函数里面的this 都是vue 实例\n    // vm 和 data 没有任何关系，通过 _data 进行关联\n    data = vm._data = isFunction(data) ? data.call(vm) : data;\n    // console.log(data, '----');\n    //  这里就获取到数据了，就要进行数据的响应式功能\n    observe(data);\n}\n","import { initState } from './state';\n\n//  在 vue 上进行一次混合操作，扩展添加方法\nexport function initMixin(Vue) {\n    Vue.prototype._init = function (options) {\n        // console.log(options);\n        // el , data\n        const vm = this;\n        vm.$options = options; // 选项，用户使用时会调用 $options ,所以框架底层进行这样创建，后面会扩展他\n\n        // 对数据进行初始化，watch  computed props  data ，都是数据\n        initState(vm); // vm.$options.data 将数据处理放在另外一个方法中，状态初始化\n    };\n}\n","import { initMixin } from './init';\n\n// Vue 是一个构造函数\nfunction Vue(options) {\n    this._init(options);\n}\n\n// 这样添加会写很多这样的代码，实现功能拆分到其他文件中，使用下面mixin 方式，扩展原型方法\n// Vue.prototype._init = function(){}\n\n// 给构造函数，添加实例公共方法\n// 扩展原型\ninitMixin(Vue);\n\nexport default Vue;\n"],"names":["isFunction","val","isObject","Observer","data","walk","Object","keys","forEach","key","defineReactive","value","observe","defineProperty","get","set","newV","initState","vm","opts","$options","initData","_data","call","initMixin","Vue","prototype","_init","options"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAAO,SAASA,UAAT,CAAoBC,GAApB,EAAyB;EAC5B,SAAO,OAAOA,GAAP,KAAe,UAAtB;EACH;EAEM,SAASC,QAAT,CAAkBD,GAAlB,EAAuB;EAC1B,SAAO,QAAOA,GAAP,MAAe,QAAf,IAA2BA,GAAG,KAAK,IAA1C;EACH;;MCHKE;EACF;EACA,oBAAYC,IAAZ,EAAkB;EAAA;;EACd,SAAKC,IAAL,CAAUD,IAAV;EACH;;;;;aAGD,cAAKA,IAAL,EAAW;EACP;EACAE,MAAAA,MAAM,CAACC,IAAP,CAAYH,IAAZ,EAAkBI,OAAlB,CAA0B,UAACC,GAAD,EAAS;EAC/BC,QAAAA,cAAc,CAACN,IAAD,EAAOK,GAAP,EAAYL,IAAI,CAACK,GAAD,CAAhB,CAAd;EACH,OAFD;EAGH;;;;;;;EAIL,SAASC,cAAT,CAAwBN,IAAxB,EAA8BK,GAA9B,EAAmCE,KAAnC,EAA0C;EACtCC,EAAAA,OAAO,CAACD,KAAD,CAAP,CADsC;;EAEtCL,EAAAA,MAAM,CAACO,cAAP,CAAsBT,IAAtB,EAA4BK,GAA5B,EAAiC;EAC7BK,IAAAA,GAD6B,iBACvB;EACF,aAAOH,KAAP;EACH,KAH4B;EAI7BI,IAAAA,GAJ6B,eAIzBC,IAJyB,EAInB;EACN;EACAJ,MAAAA,OAAO,CAACI,IAAD,CAAP;EACAL,MAAAA,KAAK,GAAGK,IAAR;EACH;EAR4B,GAAjC;EAUH;;;EAGM,SAASJ,OAAT,CAAiBR,IAAjB,EAAuB;EAC1B;EAEA,MAAI,CAACF,QAAQ,CAACE,IAAD,CAAb,EAAqB;EACjB;EACH,GALyB;EAQ1B;;;EACA,SAAO,IAAID,QAAJ,CAAaC,IAAb,CAAP;EACH;;ECxCM,SAASa,SAAT,CAAmBC,EAAnB,EAAuB;EAC1B,MAAMC,IAAI,GAAGD,EAAE,CAACE,QAAhB;;EAEA,MAAID,IAAI,CAACf,IAAT,EAAe;EACXiB,IAAAA,QAAQ,CAACH,EAAD,CAAR;EACH,GALyB;EAQ1B;EACA;EACA;EACA;EACA;EACA;;EACH;;EAGD,SAASG,QAAT,CAAkBH,EAAlB,EAAsB;EAClB,MAAId,IAAI,GAAGc,EAAE,CAACE,QAAH,CAAYhB,IAAvB,CADkB;EAIlB;EACA;;EACAA,EAAAA,IAAI,GAAGc,EAAE,CAACI,KAAH,GAAWtB,UAAU,CAACI,IAAD,CAAV,GAAmBA,IAAI,CAACmB,IAAL,CAAUL,EAAV,CAAnB,GAAmCd,IAArD,CANkB;EAQlB;;EACAQ,EAAAA,OAAO,CAACR,IAAD,CAAP;EACH;;EC5BM,SAASoB,SAAT,CAAmBC,GAAnB,EAAwB;EAC3BA,EAAAA,GAAG,CAACC,SAAJ,CAAcC,KAAd,GAAsB,UAAUC,OAAV,EAAmB;EACrC;EACA;EACA,QAAMV,EAAE,GAAG,IAAX;EACAA,IAAAA,EAAE,CAACE,QAAH,GAAcQ,OAAd,CAJqC;EAMrC;;EACAX,IAAAA,SAAS,CAACC,EAAD,CAAT,CAPqC;EAQxC,GARD;EASH;;ECVD,SAASO,GAAT,CAAaG,OAAb,EAAsB;EAClB,OAAKD,KAAL,CAAWC,OAAX;EACH;EAGD;EAEA;EACA;;;EACAJ,SAAS,CAACC,GAAD,CAAT;;;;;;;;"}