{"version":3,"file":"vue.js","sources":["../src/compiler/parser.js","../src/compiler/generate.js","../src/compiler/index.js","../src/observer/dep.js","../src/utils.js","../src/observer/scheduler.js","../src/observer/watcher.js","../src/vdom/patch.js","../src/lifecycle.js","../src/observer/array.js","../src/observer/index.js","../src/state.js","../src/init.js","../src/vdom/index.js","../src/render.js","../src/index.js"],"sourcesContent":["/**\n * 对正则对熟悉程度\n */\n\nconst ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`; // 标签名\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`; //  用来获取的标签名的 match后的索引为1的\nconst startTagOpen = new RegExp(`^<${qnameCapture}`); // 匹配开始标签的\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`); // 匹配闭合标签的\n//           aa  =   \"  xxx \"  | '  xxxx '  | xxx\nconst attribute =\n    /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/; // a=b  a=\"b\"  a='b'\nconst startTagClose = /^\\s*(\\/?)>/; //     />   <div/>\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g; // {{aaaaa}}\n\n/**\n *  将解析后的结果，组装层一个树结构 ，通过 栈 实现。\n */\nfunction createAstElement(tagName, attrs) {\n    return {\n        tag: tagName,\n        type: 1,\n        children: [],\n        parent: null,\n        attrs\n    };\n}\n\nlet root = null; // 根元素\nlet stack = [];\n\n// 每遇见一个开始标签就创建一个 element 元素 ，然后放入栈中，构建树，记录parent\nfunction start(tagName, attribute) {\n    // console.log(tagName,attribute)\n    let parent = stack[stack.length - 1];\n    let element = createAstElement(tagName, attribute);\n    if (!root) {\n        root = element;\n    }\n    if (parent) {\n        element.parent = parent; // 当放入栈中时，记录父亲是谁\n        parent.children.push(element);\n    }\n    stack.push(element);\n}\nfunction end(tagName) {\n    // console.log(tagName)\n    let last = stack.pop();\n    if (last.tag !== tagName) {\n        throw new Error('标签有错误');\n    }\n}\n\nfunction chars(text) {\n    // console.log(text)\n    text = text.replace(/\\s/g, '');\n    let parent = stack[stack.length - 1];\n    if (text) {\n        parent.children.push({ type: 3, text });\n    }\n}\n\n// html 字符传解析成 对应的脚本 来触发 tokens <div id=\"app\">{{name}}</div>\nexport function parserHTML(html) {\n    function advance(len) {\n        html = html.substring(len);\n    }\n\n    function parserStartTag() {\n        const start = html.match(startTagOpen);\n        //  console.log('parserStartTag start',start)\n        if (start) {\n            // match 不是 ast ，只是一个对象\n            const match = {\n                tagName: start[1],\n                attrs: []\n            };\n            advance(start[0].length);\n            // console.log(html) // id=\"app\">{{name}}</div>\n\n            // 进行匹配开始标签中的属性\n            let end;\n            let attr;\n            //  如果没有遇到开始标签的结尾就不停的解析\n            while (\n                !(end = html.match(startTagClose)) &&\n                (attr = html.match(attribute))\n            ) {\n                // console.log('attr',attr)\n                match.attrs.push({\n                    name: attr[1],\n                    value: attr[3] || attr[4] || attr[5]\n                });\n                advance(attr[0].length); // 一边解析，一边删除\n            }\n            // 去掉开始标签的 > 字符\n            if (end) {\n                advance(end[0].length);\n            }\n            // console.log('处理完开始标签后的  html ',html)\n            return match;\n        }\n        return false; // 不是开始标签\n    }\n\n    // 看要解析对内容是否存在，如果存在就不停的解析\n    while (html) {\n        let textEnd = html.indexOf('<');\n        if (textEnd === 0) {\n            const startTagMatch = parserStartTag(html); // 解析开始标签\n            if (startTagMatch) {\n                start(startTagMatch.tagName, startTagMatch.attrs);\n                continue;\n            }\n            const endTagMatch = html.match(endTag);\n            if (endTagMatch) {\n                end(endTagMatch[1]);\n                advance(endTagMatch[0].length);\n            }\n        }\n\n        // -----\n        let text; // 123123</div>  取到 123123 的文本内容\n        if (textEnd > 0) {\n            text = html.substring(0, textEnd);\n        }\n        if (text) {\n            chars(text);\n            advance(text.length);\n        }\n    }\n\n    return root;\n}\n","const defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g; // {{aaaaa}}\n\n// 要将 ast 的属性转换成字符串形式 [{name:'xx',value:'yy'}]  => xx=yy\nfunction genProps(attrs) {\n    let str = '';\n    for (let i = 0; i < attrs.length; i++) {\n        let attr = attrs[i];\n\n        // 要处理样式  color:red;background:blue\n        if (attr.name === 'style') {\n            let styleObj = {};\n            attr.value.replace(/([^;:]+)\\:([^;:]+)/g, function () {\n                styleObj[arguments[1]] = arguments[2];\n            });\n            attr.value = styleObj;\n        }\n\n        str += `${attr.name}:${JSON.stringify(attr.value)},`;\n    }\n    // a:1,b:2, 将最后一个 逗号去掉\n    return `{${str.slice(0, -1)}}`;\n}\n\nfunction gen(el) {\n    if (el.type == 1) {\n        return generate(el);\n    } else {\n        let text = el.text;\n        // 匹配 大括号 {{}}\n        if (!defaultTagRE.test(text)) {\n            return `_v('${text}')`;\n        } else {\n            console.log('11111111', text);\n            // hello {{name}}  world 变成=》 'hello' + name + 'world'  ; name  是变量.\n            let tokens = [];\n            let match;\n            let lastIndex = (defaultTagRE.lastIndex = 0); // 正则执行过一次之后会不在匹配了，需要重写进行。\n            while ((match = defaultTagRE.exec(text))) {\n                // 看有没有匹配到\n                console.log('2222', match);\n                let index = match.index; // 开始索引\n                if (index > lastIndex) {\n                    tokens.push(JSON.stringify(text.slice(lastIndex, index)));\n                }\n\n                // 这个变量有可能是对象\n                tokens.push(`_s(${match[1].trim()})`); // _s 就是 JSON.stringfly()\n\n                lastIndex = index + match[0].length;\n            }\n            if (lastIndex < text.length) {\n                tokens.push(JSON.stringify(text.slice(lastIndex)));\n            }\n\n            return `_v(${tokens.join('+')})`;\n        }\n    }\n}\n\nfunction genChildren(el) {\n    let children = el.children;\n    if (children) {\n        return children.map((c) => gen(c)).join(',');\n    }\n    return false;\n}\n\n// html 字符串 =》 字符串  _c('div',{id:'app',a:1},'hello')\n// _c() 创建元素虚拟节点  _v() 创建文本的虚拟节点\n// 目标： _c('div',{id:'app',a:1},'hello')\nexport function generate(el) {\n    console.log('generate  ', el);\n\n    let children = genChildren(el);\n\n    // 遍历树，将树拼接成字符串 。 生成 儿子 需要不断遍历  children => '','','' 多个\n    let code = `_c('${el.tag}' ,${\n        el.attrs.length ? genProps(el.attrs) : 'undefined'\n    } ${children ? ` , ${children}` : ''} )`;\n\n    return code;\n}\n","import { parserHTML } from './parser';\nimport { generate } from './generate';\n\n// ast （语法层面的描述，js css html）  vdom （dom节点）\n\n/**\n * 将模版内容转换成 render() 函数进行执行\n *    1. 解析 html，生成 AST 树\n *    2. 生成可执行的代码 code 。 类似变成了 React.createElement() 结构 js 代码\n *    3.\n */\nexport function compileToFunction(template) {\n    // console.log('compileToFunction',template)\n    let root = parserHTML(template);\n    console.log('AST 树', root); // 这个 ast 树是一个 js 对象，描述成标签树的标签类型，层级.\n    // 具体对象 {tag：div，attrs:{},children：[],type:1,parent:null}\n\n    // 生成代码\n    let code = generate(root);\n\n    // 返回的是 js 代码,可用于进行创建虚拟 dom ，虚拟DOM 实现原理\n    console.log('code: ', code); // code:  _c('div' ,{id:\"app\",test:\"1\",style:{\"color\":\" red\",\" background-color\":\" aqua\"}}  , _c('span' ,undefined  , _v(\"myage:\"+_s(age)+\"ssssss\"+_s(test)+\"'ssssss'\") ),_v(_s(name)) )\n\n    let render = new Function(`with(this){return ${code}}`);\n\n    return render;\n\n    // html => ast (只能描述语法，语法不存在的属性无法描述)  =>  render 函数 （new Function + with）\n    // =》 虚拟 DOM （增加额外的属性） =》 生成真实 dom\n}\n","let id = 0;\n\nclass Dep {\n    constructor() {\n        this.id = id++;\n        this.subs = [];\n    }\n    depend() {\n        // Dep.target  dep 里面要存放这个 watcher， watcher要存放dep  多对多的关系\n        if (Dep.target) {\n            Dep.target.addDep(this);\n        }\n    }\n    addSub(watcher) {\n        this.subs.push(watcher);\n    }\n    notify() {\n        console.log('notify');\n        this.subs.forEach((watcher) => {\n            watcher.update();\n        });\n    }\n}\n\nDep.target = null;\n\nexport function pushTarget(watcher) {\n    Dep.target = watcher;\n}\n\nexport function popTarget() {\n    Dep.target = null;\n}\n\nexport default Dep;\n","export function isFunction(val) {\n    return typeof val === 'function';\n}\n\nexport function isObject(val) {\n    return typeof val === 'object' && val !== null;\n}\n\nconst callbacks = [];\n\nfunction flushCallbacks() {\n    callbacks.forEach((cb) => cb());\n    waiting = false;\n}\n\nlet waiting = false;\nexport function nextTick(cb) {\n    callbacks.push(cb); // flushSchedulerQueue  /userCallback  都在这，\n\n    if (!waiting) {\n        // vue3 不考虑兼容性直接这样。\n        Promise.resolve().then(flushCallbacks);\n        waiting = true;\n    }\n}\n","import { nextTick } from '../utils';\n\nlet queue = [];\nlet has = {}; //  做列表的， 列表为何存放了哪些 watcher\n\nfunction flushSchedulerQueue() {\n    for (let i = 0; i < queue.length; i++) {\n        queue[i].run();\n    }\n    queue = [];\n    has = {};\n    pending = false;\n}\n\nlet pending = false;\n\n// 这里开启异步操作，要等待同步代码执行完才进行执行异步逻辑 update ，虚拟变真实dom\nexport function queueWatcher(watcher) {\n    const id = watcher.id;\n    if (has[id] == null) {\n        queue.push(watcher);\n        has[id] = true;\n\n        // 开启一次更新操作， 批处理（防抖）\n        if (!pending) {\n            // 当前执行栈中代码执行完毕后，会先清空微任务，再清空宏任务，希望尽早更新页面，就不要用setTimeout ，它是宏任务 。 vue 中自己 封装了一个 nextTick\n            // 异步操作\n            // setTimeout(flushSchedulerQueue, 0);\n            nextTick(flushSchedulerQueue, 0);\n\n            pending = true;\n        }\n    }\n}\n","import { popTarget, pushTarget } from './dep';\nimport { queueWatcher } from './scheduler';\n\nlet id = 0;\n\n// 一个watcher 可以理解为一个组件，这个组件上使用了多个属性 {{name}} {{age}}\n// 所以需要记住多个 dep ，每个dep 就是一个属性\nclass Watcher {\n    //  vm,  updateComponent,  () => {  console.log('更新视图了');   },   true\n    constructor(vm, exprOrFn, cb, options) {\n        this.vm = vm;\n        this.exprOrFn = exprOrFn;\n        this.cb = cb;\n        this.options = options;\n        this.id = id++; // 每个实例都身份证号\n\n        this.deps = [];\n        this.depsId = new Set();\n\n        // 默认应该让 exprOrFn 执行， exprOrFn 方法做了什么？ 执行render （去vm 上进行取值了），所以可以理解为 getter\n\n        this.getter = exprOrFn; // render(){_c(div,{},_v(name))}\n\n        this.get(); // 默认初始化， 要取值\n    }\n\n    get() {\n        // 稍后用户更新时，可以重新调研 getter 方法\n\n        // 执行下面方法，会执行属性的 defineProperty.get 方法， 每个属性都可以收集自己的 watcher\n        // 希望一个属性可以对应多个 watcher ，同时一个 watcher 可以对应多个属性。 使用 dep 管理它们多对多的关系。\n        pushTarget(this); // Dep.target = watcher\n        this.getter(); // render（） 方法对取 vm 上取值， vm._update(vm._render())\n        popTarget(); // Dep.target = null , 如果 Dep.target 有值就说明这个变量在模版中使用了。\n    }\n\n    // vue 中的更新操作是异步的\n    update() {\n        //  console.log(\n        //     '属性更新，也没渲染，更新视图， 这种方式多次修改，更新视图多次，性能不好。实现异步更新'\n        // );\n        // this.get();\n\n        // 每次更新时，就是 this 执行， 就是 watcher 执行，可以将 watcher 缓存起来，最后一次一起执行更新，\n        // 采用异步更新\n\n        queueWatcher(this);\n    }\n\n    run() {\n        this.get();\n    }\n\n    // 记住这个组件模版中使用了哪些属性数据 {{name}} {{name}}  {{age}}\n    // 一个模版中使用了 多次 name ，只需要记住一次就够了\n    addDep(dep) {\n        let id = dep.id;\n        if (!this.depsId.has(id)) {\n            this.depsId.add(id);\n            this.deps.push(dep);\n            dep.addSub(this);\n        }\n    }\n}\n\nexport default Watcher;\n","export function patch(oldVnode, vnode) {\n    if (oldVnode.nodeType == 1) {\n        // 用vnode  来生成真实dom 替换原来的 dom 元素\n        const parentElm = oldVnode.parentNode;\n        let elm = createElm(vnode);\n        parentElm.insertBefore(elm, oldVnode.nextSibling);\n\n        parentElm.removeChild(oldVnode);\n        return elm;\n    }\n}\n\nfunction createElm(vnode) {\n    let { tag, data, children, text, vm } = vnode;\n    if (typeof tag === 'string') {\n        vnode.el = document.createElement(tag);\n        children.forEach((child) => {\n            vnode.el.appendChild(createElm(child));\n        });\n    } else {\n        vnode.el = document.createTextNode(text);\n    }\n    return vnode.el;\n}\n","import Watcher from './observer/watcher';\nimport { nextTick } from './utils';\nimport { patch } from './vdom/patch';\n\nexport function lifecycleMixin(Vue) {\n    // 传入的是 虚拟dom 节点, 虚拟dom 变成真实dom\n    Vue.prototype._update = function (vnode) {\n        console.log('update', vnode);\n        const vm = this;\n        vm.$el = patch(vm.$el, vnode);\n    };\n\n    // 扩展出一个异步更新方法，项目中使用，用户中也可以使用\n    Vue.prototype.$nextTick = nextTick;\n}\n\n// 后续每个组件渲染的时候都会有一个 watcher\nexport function mountComponent(vm, el) {\n    // vue的实现很简单：做了个更新方法（初次执行，内容更新后执行）\n    // 更新函数，数据变化后，会再次调用此函数\n    let updateComponent = () => {\n        // 调用 render函数，生成虚拟 DOM\n        vm._update(vm._render()); // 后续更新可以调用 updateComponent方法。 这两个实例方法在哪写？\n        // 用虚拟 dom 生成真实 dom\n    };\n\n    // 使用观察者模式，实现数据变化页面更新： 属性是“被观察者”  ， 刷新页面：“观察者”\n    // updateComponent();\n\n    // 他是一个渲染watcher ，后续还有其他watcher\n    // 渲染一个组件\n    new Watcher(\n        vm,\n        updateComponent,\n        () => {\n            console.log('更新视图了');\n        },\n        true\n    );\n}\n","let oldArrayPrototype = Array.prototype;\n\nexport let arrayMethods = Object.create(oldArrayPrototype);\n// 这个创建的对像，的原型链 __proto__ 指向 Array.prototype\n// arrayMerhods.__proto__ = Array.prototype 继承\n\nlet methods = ['push', 'pop', 'shift', 'unshift', 'reverse', 'sort', 'splice'];\n\nmethods.forEach((method) => {\n    // 用户调用上面 7 个方法，会使用这里重写的，否则使用原理数组 原生的方法。\n    arrayMethods[method] = function (...args) {\n        console.log('数组变化了');\n\n        // 调用数组原生的方法\n        oldArrayPrototype[method].call(this, ...args);\n\n        // arr.push({a:1})\n\n        // 新数据进行添加get set 方法\n\n        let inserted;\n        let ob = this.__ob__;\n        switch (method) {\n            case 'push':\n            case 'unshift':\n                inserted = args; // 新增的数据\n                break;\n            case 'splice':\n                inserted = args.slice(2);\n            default:\n                break;\n        }\n\n        // 如果有新增的内容需要进行集训劫持，需要观测数组里面的每一项。\n        if (inserted) {\n            ob.observeArray(inserted);\n        }\n\n        // 更新操作，触发视图更新, 数组的 observer.dep 属性\n        ob.dep.notify();\n    };\n});\n","import { isObject } from '../utils';\nimport { arrayMethods } from './array';\nimport Dep from './dep';\n\n// 总结  vue源码中 响应式原理， 编译原理（模版）  diff算法。\n// 1. 如果数据是对象， 会将对象不停的递归 进行 劫持，（添加 get set 方法）\n// 2. 如果数据是数组，会劫持数组的方法，修改数组中的原型链 __proto__ 指向我们的对象， 并对数组中不是基本数据类型的进行监测。\n\n// 监测数据变化 ，类有类型，知道是它的实例\n\n// 如果给对象新增一个属性不会触发视图更新，需要使用 $set 将属性变成响应式的才可以\n// 给对象本身增加一个 dep ，dep中存watcher ，如果增加一个属性后，我就手动的触发 watcher 的更新\nclass Observer {\n    // 对对象中的所有属性进行劫持，绑定 get /set 方法， 循环对象属性\n    constructor(data) {\n        // 每个数据对象（可能是对象，数组），都有一个 dep，记录哪个watcher 使用了这个数据\n        this.dep = new Dep();\n\n        Object.defineProperty(data, '__ob__', {\n            value: this,\n            enumerable: false\n        });\n        // data.__ob__ = this; // 被劫持过的属性都有 __ob__ ,下面遍历时要不能遍历的这个属性\n\n        // 数组变化可以触发视图更新？\n        if (Array.isArray(data)) {\n            // 数组劫持的逻辑\n            // 对数组原来对方法进行改写，切面编程，高阶函数\n            // 只修改这个数组中的方法， 外部的数组不受影响\n            data.__proto__ = arrayMethods;\n\n            // 如果数组中的数据上对象类型，需要监控对象的变化\n            this.observeArray(data);\n        } else {\n            this.walk(data);\n        }\n    }\n\n    // 进行对数组中的数组，对象进行劫持，采用递归\n    observeArray(data) {\n        data.forEach((item) => {\n            observe(item);\n        });\n    }\n\n    // 循环对象属性，将这个对象的属性 设置成响应式的\n    walk(data) {\n        // 这个方式不会 获取data 原型中的属性。\n        Object.keys(data).forEach((key) => {\n            defineReactive(data, key, data[key]);\n        });\n    }\n}\n\nfunction dependArray(value) {\n    for (let i = 0; i < value.length; i++) {\n        let current = value[i]; // current 是数组里面的数组 [[[[[多层]]]]]\n        current.__ob__ && current.__ob__.dep.depend(); // 进行依赖收集\n        if (Array.isArray(current)) {\n            dependArray(current);\n        }\n    }\n}\n\n// vue2 会对对象进行遍历，将每个属性 用 define Property 重新定义，性能差，不断递归\n// {arr:[1,2,3,[a,b,c]]}\nfunction defineReactive(data, key, value) {\n    let childOb = observe(value); // 进行递归下面的属性,对象套对象\n\n    // arr  [1,2,3]\n    // childOb 是数组对应的 ob\n\n    // 每个属性都有一个dep 属性，它记录有哪些组件使用到了这个属性\n    let dep = new Dep();\n    Object.defineProperty(data, key, {\n        get() {\n            // 取值时，将 watcher 和 dep 对应起来\n            // 这个get调用，是模版中调用 {{name}} 进行取值\n            if (Dep.target) {\n                dep.depend(); // 让 dep记住 watcher\n\n                if (childOb) {\n                    // chidlOb 可能是数组，也可能是对象，对象也要收集依赖，后续 $set 方法也需要触发视图更新\n                    childOb.dep.depend(); // 数组数据对象，收集依赖 watcher ，倒是这个数组数据变化了，它就通知使用了这个数组的组件进行视图更新\n\n                    // 对数组里的每一项也进行依赖收集 [[1],[2]]\n                    if (Array.isArray(value)) {\n                        // 给数组里面的每一项也进行依赖收集，当里面每一项修改后，它们会通知视图更新\n                        dependArray(value);\n                    }\n                }\n            }\n            return value;\n        },\n        set(newV) {\n            // todo  更新视图\n\n            if (newV !== value) {\n                // 把用户设置的值也进行劫持，赋值一个新对象\n                observe(newV);\n                value = newV;\n                dep.notify(); // 告诉当前的属性存放的watcher 执行\n            }\n        }\n    });\n}\n\n// 观测数据\nexport function observe(data) {\n    // 如果是对象才观测\n\n    if (!isObject(data)) {\n        return;\n    }\n    if (data.__ob__) {\n        return data.__ob__; // 数据本身 this Observer实例\n    }\n\n    // 默认最外层的data 必须是一个对象\n    // 给这些数据，创建一个观察者\n    return new Observer(data);\n}\n","import { observe } from './observer/index'; // node_resolve_plugin 这个插件就能自动找目录下的index 文件\nimport { isFunction } from './utils';\n\n// 状态的初始化\nexport function initState(vm) {\n    const opts = vm.$options;\n\n    if (opts.data) {\n        initData(vm);\n    }\n\n    // computed 与 watch 的区别\n    // if (opts.computed) {\n    //     initComputed();\n    // }\n    // if (opts.watch) {\n    //     initWatch();\n    // }\n}\n\nfunction proxy(vm, source, key) {\n    Object.defineProperty(vm, key, {\n        get() {\n            return vm[source][key];\n        },\n        set(newValue) {\n            vm[source][key] = newValue;\n        }\n    });\n}\n\n// 用户传入的数据，要将它们变成响应式的。怎么做呢？\nfunction initData(vm) {\n    let data = vm.$options.data;\n\n    // vue2中会将 data 中的所有数据，进行数据劫持 Object.defineProperty()\n    // data 可能是对象，函数，需要判断。 当是函数时，函数里面的this 都是vue 实例\n    // vm 和 data 没有任何关系，通过 _data 进行关联\n    data = vm._data = isFunction(data) ? data.call(vm) : data;\n    // console.log(data, '----');\n\n    // 将 data 中数据代理到 vm上， 可以直接到 vm 获取数据\n    // 用户 vm.name 等价于 vm._data.name\n    for (let key in data) {\n        proxy(vm, '_data', key);\n    }\n\n    //  这里就获取到数据了，就要进行数据的响应式功能\n    observe(data);\n}\n","import { compileToFunction } from './compiler/index';\nimport { mountComponent } from './lifecycle';\nimport { initState } from './state';\n\n//  在 vue 上进行一次混合操作，扩展添加方法\nexport function initMixin(Vue) {\n    Vue.prototype._init = function (options) {\n        // console.log(options);\n        // el , data\n        const vm = this;\n        vm.$options = options; // 选项，用户使用时会调用 $options ,所以框架底层进行这样创建，后面会扩展他\n\n        // 对数据进行初始化，watch  computed props  data ，都是数据\n        //  数据劫持：就是当操作数据时，让我们知道了修改了，获取了这个数据，然后我们就可以进行做 更新试图 等功能。\n        // 加get set 方法，第一步是加了数据监控等功能，\n        initState(vm); // vm.$options.data 将数据处理放在另外一个方法中，状态初始化\n\n        // 将数据挂在 模版上\n        if (vm.$options.el) {\n            // 将数据挂载到这个模板上\n            vm.$mount(vm.$options.el);\n        }\n        // 有可能传入 template：“” ， render:h() //优先级高\n    };\n\n    Vue.prototype.$mount = function (el) {\n        const vm = this;\n        const options = vm.$options;\n        el = document.querySelector(el);\n        vm.$el = el;\n        // 把模版转化成 对应的渲染函数  =》 虚拟 DOM 概念， vnode  =》 diff 算法 更新虚拟dom =》 产生真实的节点，更新\n        if (!options.render) {\n            let template = options.template;\n            if (!template && el) {\n                template = el.outerHTML;\n                let render = compileToFunction(template);\n                options.render = render; // 就是渲染函数\n            }\n        }\n        // options.render  就是渲染函数\n        console.log(options.render); // 调用render 方法 ，渲染成真实 dom 替换掉页面的内容\n\n        // new Vue() 的过程叫做组件，这个组件能自动实现组件挂载，放在真实的页面中。\n        mountComponent(vm, el); // 组件的挂载流程，挂载到 el 元素上。在生命周期的方法中执行完成挂载\n    };\n}\n","export function createElement(vm, tag, data = {}, ...children) {\n    return vnode(vm, tag, data, data.key, children, undefined);\n}\nexport function createTextElement(vm, text) {\n    return vnode(vm, undefined, undefined, undefined, undefined, text);\n}\n\nfunction vnode(vm, tag, data, key, children, text) {\n    return { vm, tag, data, key, children, text };\n}\n","import { createElement, createTextElement } from './vdom/index';\n\nexport function renderMixin(Vue) {\n    // 节点，产生虚拟节点\n    Vue.prototype._c = function () {\n        return createElement(this, ...arguments);\n    };\n\n    // 文本 , 创建文本元素\n    Vue.prototype._v = function (text) {\n        return createTextElement(this, text);\n    };\n\n    // 变量\n    Vue.prototype._s = function (val) {\n        if (typeof val === 'object') return JSON.stringify(val);\n        return val;\n    };\n\n    Vue.prototype._render = function () {\n        console.log('render'); // render 比 update 先执行\n\n        const vm = this;\n\n        // 这个方法中的 js 代码会有 _c, _s, _v 这些方法，需要定义这些方法\n        let render = vm.$options.render; // 就是解析出来的 render 方法，同时也有可能是用户写的\n\n        let vnode = render.call(vm);\n\n        return vnode;\n    };\n}\n","import { initMixin } from './init';\nimport { renderMixin } from './render';\nimport { lifecycleMixin } from './lifecycle';\n\n// Vue 是一个构造函数\nfunction Vue(options) {\n    this._init(options);\n}\n\n// 这样添加会写很多这样的代码，实现功能拆分到其他文件中，使用下面mixin 方式，扩展原型方法\n// Vue.prototype._init = function(){}\n\n// 给构造函数，添加实例公共方法\n// 扩展原型\ninitMixin(Vue);\nrenderMixin(Vue); // _render\nlifecycleMixin(Vue); // _update\n\nexport default Vue;\n"],"names":["ncname","qnameCapture","startTagOpen","RegExp","endTag","attribute","startTagClose","createAstElement","tagName","attrs","tag","type","children","parent","root","stack","start","length","element","push","end","last","pop","Error","chars","text","replace","parserHTML","html","advance","len","substring","parserStartTag","match","attr","name","value","textEnd","indexOf","startTagMatch","endTagMatch","defaultTagRE","genProps","str","i","styleObj","arguments","JSON","stringify","slice","gen","el","generate","test","console","log","tokens","lastIndex","exec","index","trim","join","genChildren","map","c","code","compileToFunction","template","render","Function","id","Dep","subs","target","addDep","watcher","forEach","update","pushTarget","popTarget","isFunction","val","isObject","callbacks","flushCallbacks","cb","waiting","nextTick","Promise","resolve","then","queue","has","flushSchedulerQueue","run","pending","queueWatcher","Watcher","vm","exprOrFn","options","deps","depsId","Set","getter","get","dep","add","addSub","patch","oldVnode","vnode","nodeType","parentElm","parentNode","elm","createElm","insertBefore","nextSibling","removeChild","data","document","createElement","child","appendChild","createTextNode","lifecycleMixin","Vue","prototype","_update","$el","$nextTick","mountComponent","updateComponent","_render","oldArrayPrototype","Array","arrayMethods","Object","create","methods","method","args","call","inserted","ob","__ob__","observeArray","notify","Observer","defineProperty","enumerable","isArray","__proto__","walk","item","observe","keys","key","defineReactive","dependArray","current","depend","childOb","set","newV","initState","opts","$options","initData","proxy","source","newValue","_data","initMixin","_init","$mount","querySelector","outerHTML","undefined","createTextElement","renderMixin","_c","_v","_s"],"mappings":"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"}